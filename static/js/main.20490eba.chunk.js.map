{"version":3,"sources":["components/TaskList/Task/Task.styled.js","components/TaskList/Task/Task.js","components/TaskList/ControlPanel/ControlPanel.styled.js","components/TaskList/ControlPanel/ControlPanel.js","components/TaskList/TaskList.styled.js","components/TaskList/TaskList.js","components/AddForm/AddForm.styled.js","components/AddForm/AddForm.js","components/ToDoList.styled.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskBlock","styled","div","_templateObject","Object","taggedTemplateLiteral","TaskText","span","_templateObject2","props","isDone","Task","_ref","id","desc","priority","date","toggleTask","react_default","a","createElement","onClick","ControlPanelBlock","ControlPanel_styled_templateObject","ControlPanel","deleteTasks","sortByPriority","sortByDate","Button","variant","color","endIcon","Delete_default","sx","marginRight","LowPriority_default","Restore_default","TaskListSection","section","TaskList_styled_templateObject","ListBlock","TaskList_styled_templateObject2","TaskList","tasks","list","map","task","TaskList_Task_Task","assign","key","length","Fragment","TaskList_ControlPanel_ControlPanel","NewTaskSection","AddForm_styled_templateObject","AddForm","addTask","_useState","useState","_useState2","slicedToArray","newTask","setNewTask","_useState3","_useState4","setPriority","TextField","value","onChange","e","target","placeholder","size","InputProps","endAdornment","InputAdornment","position","Assignment_default","Select","MenuItem","AddCircle_default","Main","main","ToDoList_styled_templateObject","Title","h1","ToDoList_styled_templateObject2","initialList","nanoid","Date","now","getActualDate","month","getMonth","day","getDate","concat","h","getHours","m","getMinutes","s","getSeconds","ToDoList","setTasks","components_TaskList_TaskList","filter","toConsumableArray","sort","t1","t2","components_AddForm_AddForm","trim","App","components_ToDoList","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.20490eba.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const TaskBlock = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nexport const TaskText = styled.span`\r\n  text-decoration: ${props => props.isDone ? 'line-through' : 'none'};\r\n\r\n  &:hover {\r\n    font-weight: 500;\r\n    text-shadow: 2px 3px 2px pink;\r\n  };\r\n`;","import React from 'react';\r\nimport { TaskBlock, TaskText } from './Task.styled';\r\n\r\nconst Task = ({\r\n  id,\r\n  desc,\r\n  isDone,\r\n  priority,\r\n  date,\r\n  toggleTask\r\n}) => {\r\n  const prName = ['low', 'medium', 'high'];\r\n\r\n  return (\r\n    <TaskBlock>\r\n      <TaskText isDone={isDone} onClick={() => toggleTask(id)}>\r\n        {desc} | priority: <b>{prName[priority - 1]}</b> | created: {date[1]}\r\n      </TaskText>\r\n    </TaskBlock>\r\n  );\r\n};\r\n\r\nexport default Task;","import styled from 'styled-components';\r\n\r\nexport const ControlPanelBlock = styled.div`\r\n  @media (max-width: 800px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport LowPriorityIcon from '@mui/icons-material/LowPriority';\r\nimport RestoreIcon from '@mui/icons-material/Restore';\r\nimport { ControlPanelBlock } from './ControlPanel.styled';\r\n\r\nconst ControlPanel = ({ deleteTasks, sortByPriority, sortByDate }) => {\r\n  return (\r\n    <ControlPanelBlock>\r\n      <Button\r\n        onClick={deleteTasks}\r\n        variant='contained'\r\n        color='error'\r\n        endIcon={<DeleteIcon />}\r\n        sx={{\r\n          marginRight: '1rem'\r\n        }} >\r\n        remove completed\r\n      </Button>\r\n      <Button\r\n        onClick={sortByPriority}\r\n        variant='contained'\r\n        color='primary'\r\n        endIcon={<LowPriorityIcon />}\r\n        sx={{\r\n          marginRight: '1rem'\r\n        }} >\r\n        sort by priority\r\n      </Button>\r\n      <Button\r\n        onClick={sortByDate}\r\n        variant='contained'\r\n        color='primary'\r\n        endIcon={<RestoreIcon />} >\r\n        sort by newest\r\n      </Button>\r\n    </ControlPanelBlock>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;","import styled from 'styled-components';\r\n\r\nexport const TaskListSection = styled.section`\r\n  margin-bottom: 1rem;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nexport const ListBlock = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n`;","import React from 'react';\r\nimport Task from './Task/Task';\r\nimport ControlPanel from './ControlPanel/ControlPanel';\r\nimport { TaskListSection, ListBlock } from './TaskList.styled';\r\n\r\nconst TaskList = ({\r\n  deleteTasks,\r\n  sortByPriority,\r\n  sortByDate,\r\n  toggleTask,\r\n  tasks\r\n}) => {\r\n  const list = tasks.map(task => (\r\n    <Task key={task.id} toggleTask={toggleTask} {...task} />\r\n  ));\r\n\r\n  return (\r\n    <TaskListSection>\r\n      {tasks.length ? (\r\n        <>\r\n          <ListBlock>\r\n            {list}\r\n          </ListBlock>\r\n          <ControlPanel\r\n            deleteTasks={deleteTasks}\r\n            sortByPriority={sortByPriority}\r\n            sortByDate={sortByDate} />\r\n        </>\r\n      ) : <h3>There are no tasks</h3>}\r\n    </TaskListSection>\r\n  );\r\n};\r\n\r\nexport default TaskList;","import styled from 'styled-components';\r\n\r\nexport const NewTaskSection = styled.section`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 0.5rem;\r\n\r\n  @media (max-width: 800px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { NewTaskSection } from './AddForm.styled';\r\n\r\nconst AddForm = ({ addTask }) => {\r\n  const [newTask, setNewTask] = useState('');\r\n  const [priority, setPriority] = useState(2);\r\n\r\n  const addBtnOnClick = () => {\r\n    addTask(newTask, priority);\r\n    setNewTask('');\r\n    setPriority(2);\r\n  };\r\n\r\n  return (\r\n    <NewTaskSection>\r\n      <TextField\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder='new task...'\r\n        id='new-task'\r\n        size='small'\r\n        color='success'\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position='end'>\r\n              <AssignmentIcon />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n        sx={{\r\n          marginRight: '1rem'\r\n        }} />\r\n      <Select\r\n        value={priority}\r\n        onChange={(e) => setPriority(e.target.value)}\r\n        id='priority-select'\r\n        size='small'\r\n        sx={{\r\n          marginRight: '1rem'\r\n        }} >\r\n        <MenuItem value={3}>High</MenuItem>\r\n        <MenuItem value={2}>Medium</MenuItem>\r\n        <MenuItem value={1}>Low</MenuItem>\r\n      </Select>\r\n      <Button\r\n        onClick={addBtnOnClick}\r\n        variant='contained'\r\n        color='success'\r\n        endIcon={<AddCircleIcon />} >\r\n        add task\r\n      </Button>\r\n    </NewTaskSection>\r\n  );\r\n};\r\n\r\nexport default AddForm;","import styled from 'styled-components';\r\n\r\nexport const Main = styled.main`\r\n  background-color: antiquewhite;\r\n  width: 50%;\r\n  margin: 2rem auto;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-bottom: 0.8rem;\r\n`;","import React, { useState } from 'react';\nimport TaskList from './TaskList/TaskList';\nimport AddForm from './AddForm/AddForm';\nimport { Main, Title } from './ToDoList.styled';\nimport { nanoid } from 'nanoid';\n\nconst initialList = [\n  {\n    id: nanoid(),\n    desc: 'take out the trash',\n    isDone: false,\n    priority: 2,\n    date: [Date.now(), getActualDate()]\n  },\n  {\n    id: nanoid(),\n    desc: 'feed the pets',\n    isDone: false,\n    priority: 3,\n    date: [Date.now(), getActualDate()]\n  },\n  {\n    id: nanoid(),\n    desc: 'read a book',\n    isDone: false,\n    priority: 1,\n    date: [Date.now(), getActualDate()]\n  },\n  {\n    id: nanoid(),\n    desc: 'go to the shop',\n    isDone: false,\n    priority: 2,\n    date: [Date.now(), getActualDate()]\n  },\n  {\n    id: nanoid(),\n    desc: 'call grandpa',\n    isDone: false,\n    priority: 3,\n    date: [Date.now(), getActualDate()]\n  }\n];\n\nfunction getActualDate() {\n  const months = [\n    'Jan', 'Feb', 'Mar', 'Apr',\n    'May', 'June', 'July', 'Aug',\n    'Sep', 'Oct', 'Nov', 'Dec'\n  ];\n  const date = new Date();\n  const month = months[date.getMonth()];\n  const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n  const h = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n  const m = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n  const s = date.getSeconds() > 9 ? date.getSeconds() : `0${date.getSeconds()}`;\n  return `${month} ${day} ${h}:${m}:${s}`;\n}\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState(initialList);\n\n  const addTask = (newTask, priority) => {\n    if (newTask.trim() !== '') {\n      setTasks([\n        ...tasks, {\n          id: nanoid(),\n          desc: newTask,\n          isDone: false,\n          priority: priority,\n          date: [Date.now(), getActualDate()]\n        }\n      ]);\n    }\n  };\n\n  const deleteTasks = () => {\n    setTasks(tasks.filter(task => !task.isDone));\n  };\n\n  const sortByPriority = () => {\n    setTasks([...tasks].sort((t1, t2) => t2.priority - t1.priority));\n  };\n\n  const sortByDate = () => {\n    setTasks([...tasks].sort((t1, t2) => t2.date[0] - t1.date[0]));\n  };\n\n  const toggleTask = (id) => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) task.isDone = !task.isDone;\n      return task;\n    }));\n  };\n\n  return (\n    <Main>\n      <Title>React todo list</Title>\n      <TaskList\n        deleteTasks={deleteTasks}\n        sortByPriority={sortByPriority}\n        sortByDate={sortByDate}\n        toggleTask={toggleTask}\n        tasks={tasks} />\n      <AddForm addTask={addTask} />\n    </Main>\n  );\n};\n\nexport default ToDoList;","import React from 'react';\r\nimport ToDoList from './components/ToDoList';\r\n\r\nconst App = () => {\r\n  return <ToDoList />;\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}